/*
 * Global Styles
 *
 * A light, modern interface using gradients and glassmorphism effects.
 * Layout uses CSS Grid/Flexbox for responsiveness across devices.
 */

:root {
  --bg-gradient: linear-gradient(135deg, #e0eafc 0%, #cfdef3 100%);
  --glass-bg: rgba(255, 255, 255, 0.35);
  --glass-border: rgba(255, 255, 255, 0.6);
  --primary-color: #2a6f97;
  --secondary-color: #477b9e;
  --danger-color: #c14953;
  --text-color: #0a2342;
  --shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: sans-serif;
  color: var(--text-color);
}

body {
  min-height: 100vh;
  background: var(--bg-gradient);
  display: flex;
  flex-direction: column;
}

.header {
  padding: 1.5rem;
  text-align: center;
  color: var(--primary-color);
  backdrop-filter: blur(8px);
}
.header h1 {
  font-size: 2rem;
  margin-bottom: 0.25rem;
}
.header .subtitle {
  font-size: 0.9rem;
  color: var(--secondary-color);
}

main {
  flex: 1;
  display: grid;
  grid-template-columns: 1fr;
  gap: 1rem;
  padding: 1rem;
}
@media (min-width: 800px) {
  main {
    grid-template-columns: 280px 1fr;
    grid-template-rows: auto 1fr auto;
  }
}

/* Glass effect for panels */
.glass {
  background: var(--glass-bg);
  border: 1px solid var(--glass-border);
  border-radius: 12px;
  padding: 1rem;
  backdrop-filter: blur(12px);
  box-shadow: var(--shadow);
}

.controls {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.control-group {
  display: flex;
  flex-direction: column;
}
.control-group label {
  margin-bottom: 0.25rem;
  font-weight: 600;
}
.control-group input[type="text"],
.control-group select,
.control-group input[type="range"] {
  padding: 0.5rem;
  border-radius: 6px;
  border: 1px solid #cdd4e4;
  background: rgba(255, 255, 255, 0.8);
  outline: none;
  transition: border-color 0.2s;
}
.control-group input[type="text"]:focus,
.control-group select:focus,
.control-group input[type="range"]:focus {
  border-color: var(--primary-color);
}

.speed-value {
  font-size: 0.8rem;
  margin-left: 0.5rem;
  color: var(--secondary-color);
}

.buttons {
  display: flex;
  gap: 0.5rem;
  justify-content: space-between;
}

.btn {
  flex: 1;
  padding: 0.5rem 0.75rem;
  border: none;
  border-radius: 6px;
  color: #fff;
  cursor: pointer;
  transition: background 0.2s;
}

.btn.primary {
  background: var(--primary-color);
}
.btn.secondary {
  background: var(--secondary-color);
}
.btn.danger {
  background: var(--danger-color);
}
.btn:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* Slightly darken button backgrounds on hover using brightness filter */
.btn.primary:hover:not(:disabled),
.btn.secondary:hover:not(:disabled),
.btn.danger:hover:not(:disabled) {
  filter: brightness(0.95);
}

/* Gear visualization area */
.visualization {
  position: relative;
  width: 100%;
  height: 300px;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
}

.gear-svg {
  width: 100%;
  height: 100%;
}

/* Dashboard styles */
.dashboard {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  font-size: 0.9rem;
}

.dashboard-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.dash-label {
  font-weight: 600;
}
.dash-value {
  font-family: monospace;
  overflow-wrap: anywhere;
}

.progress-container {
  flex: 1;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}
.progress-bar {
  flex: 1;
  height: 10px;
  border-radius: 5px;
  background: #dfe8f3;
  overflow: hidden;
}
.progress-fill {
  height: 100%;
  width: 0;
  background: var(--primary-color);
  transition: width 0.2s;
}
.progress-percent {
  width: 40px;
  text-align: right;
  font-family: monospace;
}

.footer {
  padding: 1rem;
  text-align: center;
  font-size: 0.8rem;
  color: var(--secondary-color);
}

/* Utility class for darkening colors; using CSS variables via filter is unreliable,
   so we define lighten/darken via relative alpha on hover using separate classes. */
.btn.primary:hover:not(:disabled) {
  filter: brightness(0.95);
}
.btn.secondary:hover:not(:disabled) {
  filter: brightness(0.95);
}
.btn.danger:hover:not(:disabled) {
  filter: brightness(0.95);
}